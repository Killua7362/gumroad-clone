import { queryClient } from '@/app/RouteComponent';
import { allProductsFetcherProps } from '@/react-query/query';
import { createFileRoute } from '@tanstack/react-router';
import { z } from 'zod';

const ProductHomeSchema = z.object({
    sort_by: z
        .enum(['title', 'price', 'created_at', 'modified_at'])
        .catch('title')
        .optional(),
    reverse: z.boolean().catch(false).optional(),
    search_word: z.string().optional(),
    search_bar_active: z.boolean().catch(false).optional(),
    sort_bar_active: z.boolean().catch(false).optional(),
});

export type ProductHomeRouteType = z.infer<typeof ProductHomeSchema>;

export const Route = createFileRoute(
    '/_protected/_layout/products/_layout_products/home/'
)({
    loaderDeps: ({ search: { reverse,sort_by } }) => ({ reverse,sort_by }),
    loader: async ({ deps: { reverse,sort_by } }): Promise<ProductType[]> => {
        const allProducts = await queryClient.ensureQueryData(
            allProductsFetcherProps({reverse:reverse ?? false,sort_by:sort_by ?? 'updated_at'})
        );
        return allProducts;
    },
    validateSearch: ProductHomeSchema,
});
